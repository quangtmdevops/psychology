"""add is_active to users

Revision ID: 321f4f352e00
Revises: 83e3c8283350
Create Date: 2025-05-11 11:18:12.731819

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '321f4f352e00'
down_revision: Union[str, None] = '83e3c8283350'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create new table with desired schema
    op.create_table(
        'users_new',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('password', sa.String(), nullable=True),
        sa.Column('is_premium', sa.Boolean(), nullable=True, server_default=sa.text("'0'")),
        sa.Column('is_active', sa.Boolean(), nullable=False, server_default=sa.true()),
        sa.Column('reward', sa.Integer(), nullable=True, server_default=sa.text("'0'")),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=True, server_default=sa.text('(CURRENT_TIMESTAMP)')),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_new_email'), 'users_new', ['email'], unique=True)
    op.create_index(op.f('ix_users_new_id'), 'users_new', ['id'], unique=False)

    # Copy data from old table to new table
    op.execute('''
        INSERT INTO users_new (id, email, password, is_premium, reward, created_at, updated_at)
        SELECT id, email, password, is_premium, reward, created_at, updated_at
        FROM users
    ''')

    # Drop old table and rename new table
    op.drop_table('users')
    op.rename_table('users_new', 'users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create new table with original schema
    op.create_table(
        'users_old',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('password', sa.String(), nullable=False),
        sa.Column('is_premium', sa.Boolean(), nullable=False, server_default=sa.text("'0'")),
        sa.Column('reward', sa.Integer(), nullable=False, server_default=sa.text("'0'")),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, server_default=sa.text('(CURRENT_TIMESTAMP)')),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_old_email'), 'users_old', ['email'], unique=True)
    op.create_index(op.f('ix_users_old_id'), 'users_old', ['id'], unique=False)

    # Copy data from current table to old table
    op.execute('''
        INSERT INTO users_old (id, email, password, is_premium, reward, created_at, updated_at)
        SELECT id, email, password, is_premium, reward, created_at, updated_at
        FROM users
    ''')

    # Drop current table and rename old table
    op.drop_table('users')
    op.rename_table('users_old', 'users')
    # ### end Alembic commands ###
